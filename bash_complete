# Script autocomplete of sam
# bash completion file for sam subcommands
#
# This script provides supports completion of:
#  - command options
#  - app and version names
#  - image repos and tags
#  - filepaths
#
# To enable the completions either:
#  - place this file in /etc/bash_completion.d
#  or
#  - copy this file and add the line below to your .bashrc after
#    bash completion features are loaded
#     . sam_autocomplete
#
# Note:
# Currently, the completions will not work if 
# not started subcommand 'sam search'
#
# example from /etc/bash_completion.d/docker.io
#
_sam_in()
{
        local hist='/var/db/sam/history'
        local apps="$(cat $hist)"
        COMPREPLY=( $( compgen -W "$apps" -- "$cur" ) )
}
#
_sam_rm()
{
        local names=$(sam list --raw | awk -F '|' '{print $1 ":" $2}')
        COMPREPLY=( $( compgen -W "$names" -- "$cur" ) )
}
#
_sam_info()
{
        local hist='/var/db/sam/history'
        local apps="$(cat $hist)"
        COMPREPLY=( $( compgen -W "$apps" -- "$cur" ) )
}
#
_sam_se()
{
        local hist='/var/db/sam/history'
        local names=$(cat $hist | awk -F ':' '{print $1}' | uniq)
        COMPREPLY=( $( compgen -W "$names" -- "$cur" ) )
}
#
_sam()
{
        local commands="
                        help
                        install
                        remove
                        list
                        search
                        info
                        upgrade
                        addrepo
                        removerepo
                        modifyrepo
                        listrepos
                        purge
                "
        local addcommands="
                           in
                           rm
                           se
                           up
                           ar
                           rr
                           mr
                           lr
                "
#
        local cur=${COMP_WORDS[COMP_CWORD]}
        local prev=${COMP_WORDS[COMP_CWORD-1]}
        COMP_WORDBREAKS=${COMP_WORDBREAKS//:}
        COMPREPLY=()
#
        case "${COMP_WORDS[COMP_CWORD]}" in
                -*) COMPREPLY=( $(compgen -W '--debug --help' -- $cur) )
                    return 0
                    ;;
                *)
                    if [[ -z "`echo $commands$addcommands | grep $prev`" ]];then
                        COMPREPLY=( $(compgen -W "$commands" -- $cur) )
                        return 0
                    else
                        if [[ "$prev" == 'in' || "$prev" == 'install' ]];then
                                _sam_in;
                                return 0
                        fi;
                        if [[ "$prev" == 'rm' || "$prev" == 'remove' ]];then
                                _sam_rm;
                                return 0
                        fi;
                        if [[ "$prev" == 'se' || "$prev" == 'search' ]];then
                                _sam_se;
                                return 0
                        fi;
                        if [[ "$prev" == 'info' ]];then
                                _sam_info;
                                return 0
                        fi;
                        COMPREPLY=()
                        return 0
                    fi;
                    esac
        return 0
}
complete -F _sam sam
# End script autocomplete

if [[ $- =~ "i" && $USER == "smilart" ]]; then

  # Disabling kernel messages
  if [[ `tty` =~ "tty" ]];then
    setterm --msg off
    setterm --powerdown 0
    setterm --powersave off
    setterm --blank 0
  fi;

  if [ ! -e /etc/smilart/first_boot ]; then    
    #First start of the product installation script.
    distribution-config;
  fi;

fi;
